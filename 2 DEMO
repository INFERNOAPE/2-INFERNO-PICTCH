#!/usr/bin/env bash
set -euo pipefail

# myNSU Prototype — Agent Starter Kit (with Theme Reference)
# Creates the full repo with all files. Run from an empty folder.
# Usage: bash bootstrap.sh

mkdir -p prototype-mynsu/{public/images,agent,data,scripts}
cd prototype-mynsu

# ---------------------------
# package.json
# ---------------------------
cat > package.json <<'JSON'
{
  "name": "prototype-mynsu",
  "version": "0.2.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "node server.js",
    "seed": "node scripts/seed.js",
    "agent": "node agent/agent.mjs run",
    "agent:plan": "node agent/agent.mjs plan",
    "agent:kb": "node agent/agent.mjs kb"
  },
  "dependencies": {
    "express": "^4.19.2",
    "nanoid": "^5.0.7",
    "yaml": "^2.5.0"
  }
}
JSON

# ---------------------------
# server.js
# ---------------------------
cat > server.js <<'JS'
import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = express();
const PORT = process.env.PORT || 5173;

app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

const loadJson = (rel) =>
  JSON.parse(fs.readFileSync(path.join(__dirname, rel), 'utf8'));

app.get('/api/faqs', (_req, res) => res.json(loadJson('data/faqs.json')));
app.get('/api/nav', (_req, res) => res.json(loadJson('data/nav.json')));
app.get('/api/student', (_req, res) => res.json(loadJson('data/students.json')[0]));

app.listen(PORT, () => {
  console.log(`myNSU prototype running → http://localhost:${PORT}`);
});
JS

# ---------------------------
# setup.sh
# ---------------------------
cat > setup.sh <<'BASH'
#!/usr/bin/env bash
set -e
if ! command -v node >/dev/null 2>&1; then
  echo "Please install Node.js LTS: https://nodejs.org"; exit 1
fi
npm install
npm run seed
npm run agent
echo "✅ Setup complete. Start with: npm run dev"
BASH
chmod +x setup.sh

# ---------------------------
# README.md
# ---------------------------
cat > README.md <<'MD'
# myNSU Prototype — Demo Only (Theme-Referenced)

A sandboxed clone of the myNSU portal UI with fake data and a floating chatbot.
Visually matched to your reference via **theme-patch.css** and **styles-override.css**.

## Quickstart
1) Install Node.js LTS  
2) Ensure the two theme files exist in `public/`:
   - `public/theme-patch.css`
   - `public/styles-override.css`
3) In Terminal:
   ```bash
   cd prototype-mynsu
   npm install
   npm run seed
   npm run dev
  <!-- Main -->
  <main class="col-12 col-md-9 col-lg-10 p-4">
    <div class="page-title">
      <h1 class="h4 mb-0">Dashboard</h1>
      <small>Demo data & scripted chatbot</small>
    </div>

    <div class="tile-row">
      <!-- Left column -->
      <div>
        <div class="card shadow-sm">
          <div class="card-header bg-transparent"><strong>Student Overview</strong></div>
          <div class="card-body">
            <div id="studentCard" class="row g-3"></div>
          </div>
        </div>

        <div class="card shadow-sm mt-3">
          <div class="card-header bg-transparent"><strong>Today’s Classes</strong></div>
          <div class="card-body" id="todayClasses">Loading…</div>
        </div>
      </div>

      <!-- Right column -->
      <div>
        <div class="card shadow-sm">
          <div class="card-header bg-transparent"><strong>Announcements</strong></div>
          <div class="card-body">
            <ul class="list-group list-group-flush" id="annList"></ul>
          </div>
        </div>

        <div class="card shadow-sm mt-3">
          <div class="card-header bg-transparent"><strong>Quick Links</strong></div>
          <div class="card-body">
            <div id="quickLinks" class="d-grid gap-2"></div>
          </div>
        </div>
      </div>
    </div>

  </main>
</div>
  // Top Nav
  const topEl = document.getElementById('topNav');
  nav.top.forEach(item => {
    const li = document.createElement('li');
    li.className = 'nav-item';
    li.innerHTML = `<a class="nav-link" href="#${item.slug}">${item.label}</a>`;
    topEl.appendChild(li);
  });

  // Side Nav (mirror sections)
  const sideEl = document.getElementById('sideNav');
  [...nav.top, ...nav.quick].forEach((item, i) => {
    const a = document.createElement('a');
    a.className = 'nav-link' + (i === 0 ? ' active' : '');
    a.href = `#${item.slug}`;
    a.textContent = item.label;
    const li = document.createElement('li');
    li.className = 'nav-item';
    li.appendChild(a);
    sideEl.appendChild(li);
  });

  // Student Overview
  const s = student;
  const sc = document.getElementById('studentCard');
  sc.innerHTML = `
    <div class="col-12 col-md-6">
      <div class="p-3 bg-light rounded-3 shadow-subtle">
        <div class="fw-semibold">Name</div>
        <div>${s.firstName} ${s.lastName}</div>
      </div>
    </div>
    <div class="col-12 col-md-6">
      <div class="p-3 bg-light rounded-3 shadow-subtle">
        <div class="fw-semibold">Major</div>
        <div>${s.major}</div>
      </div>
    </div>
    <div class="col-12">
      <div class="p-3 bg-light rounded-3 shadow-subtle">
        <div class="fw-semibold">GPA</div>
        <div>${s.gpa.toFixed(1)}</div>
      </div>
    </div>`;

  // Today classes (from students.json “today”)
  const tc = document.getElementById('todayClasses');
  tc.innerHTML = s.today.map(c => `
    <div class="d-flex align-items-center justify-content-between border-bottom py-2">
      <span>${c}</span><span class="badge-accent">Today</span>
    </div>
  `).join('') || 'No classes today.';

  // Announcements (static demo)
  const ann = [
    'Fall registration opens Sept 16.',
    'Financial Aid office hours extended this week.',
    'Homecoming tickets available Friday.'
  ];
  const annList = document.getElementById('annList');
  ann.forEach(t => {
    const li = document.createElement('li');
    li.className = 'list-group-item';
    li.textContent = t;
    annList.appendChild(li);
  });

  // Quick Links
  const ql = document.getElementById('quickLinks');
  nav.quick.forEach(item => {
    const a = document.createElement('a');
    a.className = 'btn btn-outline-primary btn-sm';
    a.href = `#${item.slug}`;
    a.textContent = item.label;
    ql.appendChild(a);
  });
}
bootstrap();

